# Regression tests for libvarexp.

%test == () +cmd='sh' (%run-tests) \
                      (unescape.exe) \
                      (expand-character-class.exe) \
                      (expand1.exe) \
                      (expand2.exe) \
                      (force-expand.exe) \
                      (expand3.exe) \
                      (expand4.exe) \
                      (expand5.exe) \
                      (expand6.exe) \
                      (empty-search-pattern.exe) \
                      (offset-failure.exe) \
                      +output_show \
                      :stdout

unescape.exe == unescape.c +(%test.flags) :exe
expand-character-class.exe == expand-character-class.c +(%test.flags) :exe
expand1.exe == expand1.c +(%test.flags) :exe
expand2.exe == expand2.c +(%test.flags) :exe
force-expand.exe == force-expand.c +(%test.flags) :exe
expand3.exe == expand3.c +(%test.flags) :exe
expand4.exe == expand4.c +(%test.flags) :exe
expand5.exe == expand5.c +(%test.flags) :exe
expand6.exe == expand6.c +(%test.flags) :exe
empty-search-pattern.exe == empty-search-pattern.c +(%test.flags) :exe
offset-failure.exe == offset-failure.c +(%test.flags) :exe

%test.flags == <<
    +lib=(../libvarexp.a)
    +cc='gcc -Wall -pedantic'
    +debug
    +define=DEBUG

%run-tests == <<[eof]
    if [ $# -lt 1 ]; then
        echo "Usage: $0 test1.exe [...]"
        exit 1
    fi

    RESCOLUMN=50
    numTests=0
    numFails=0

    echo "Running test suite:"

    pad=''
    n=$RESCOLUMN
    while [ $n -gt 0 ]; do
        pad="$pad."
        n=`expr $n - 1`
    done
    for suite in "$@"; do
        name=`basename "${suite}"`
        name=`expr "${name}" : '\(.*\)\.exe$'`
        echo "$name$pad" | awk '{ printf("%s ", substr($0, 0, n)); }' n=$RESCOLUMN
        export DMALLOC_OPTIONS=debug=0x4f47d03,inter=1,log=/tmp/$name.dmalloc
        numTests=`expr $numTests + 1`
        eval $suite >/dev/null 2>&1
        if [ $? -eq 0 ]; then
            echo "OK"
        else
            numFails=`expr $numFails + 1`
            echo "FAILED"
        fi
    done

    echo
    if [ $numFails -eq 0 ]; then
        echo "Summary: All tests succeeded."
        exit 0
    else
        percent=`expr $numFails \* 100`
        percent=`expr $percent / $numTests`
        echo "Summary: $numFails of $numTests tests failed ($percent%)."
        exit 1
    fi
[eof]

%clean ! == !<<
    rm -f *.exe
